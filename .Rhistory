library(RCurl)
library(rvest)
library(dplyr)
library(stringr)
library(read.dbc)
library(readxl)
source("R/utils.R")
ano <- "2024"
dir_out <- "outputs"
log_file <- sprintf("documentos/log_%s.txt", ano)
unlink(log_file)
download_dsinfo(level = "procedimento", dir_out = dir_out, log_file = log_file)
if(!(level %in% c("forma_organizacao", "procedimento")))
"No momento só aceitamos 'forma_organizacao' ou 'procedimento' para esse argumento "
level <- "forma_organizacao"
dir_out <- ""
log_file <- "log.txt"
if(!(level %in% c("forma_organizacao", "procedimento")))
"No momento só aceitamos 'forma_organizacao' ou 'procedimento' para esse argumento "
ftp <- "ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/TabelaUnificada_202404_v2404031505.zip"
dir_out <- sprintf("%s/DS_INFO", dir_out)
dir.create(dir_out, recursive = TRUE, showWarnings = FALSE)
temp_file <- tempfile(fileext = ".zip")
download.file(url = ftp, destfile = temp_file, mode = "wb") # wb para Windows
temp_file
library(RCurl)
library(rvest)
library(dplyr)
library(stringr)
library(read.dbc)
library(readxl)
setwd('C:\\desenvolvimento\\projetos\\Dbc_reader')
source("R/utils.R")
level <- "forma_organizacao"
dir_out <- ""
log_file <- "log.txt"
if(!(level %in% c("forma_organizacao", "procedimento")))
"No momento só aceitamos 'forma_organizacao' ou 'procedimento' para esse argumento "
level <- "procedimento"
dir_out <- ""
log_file <- "log.txt"
if(!(level %in% c("forma_organizacao", "procedimento")))
"No momento só aceitamos 'forma_organizacao' ou 'procedimento' para esse argumento "
ftp <- "ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/TabelaUnificada_202404_v2404031505.zip"
dir_out <- sprintf("%s/DS_INFO", dir_out)
dir.create(dir_out, recursive = TRUE, showWarnings = FALSE)
temp_file <- tempfile(fileext = ".zip")
download.file(url = ftp, destfile = temp_file, mode = "wb") # wb para Windows
unzip(temp_file, exdir = paste0(dir_out, "/docs"))
if(level == "procedimento"){
layout_procedimento <- read.table(paste0(dir_out, "/docs/tb_procedimento_layout.txt"), sep = ",", header = TRUE) %>%
filter(Coluna %in% c("CO_PROCEDIMENTO", "NO_PROCEDIMENTO"))
tab_procedimento <- read.fwf(file = paste0(dir_out, "/docs/tb_procedimento.txt"),
widths = layout_procedimento$Tamanho,
row.names = NULL,
col.names = c("ALVO", "ALVO_NAME"),
fileEncoding = "Windows-1252",
colClasses = "character") %>%
mutate(ALVO_NAME = str_to_title(ALVO_NAME))
write.table(file = sprintf("%s/procedimentos.csv", dir_out), x = tab_procedimento,
sep = ";", dec = ".", row.names = FALSE)
log_tab <- data.frame(YEAR = "ALL",
TABLE = "DS_INFO",
LINK = ftp,
PATH = sprintf("%s/procedimentos.csv", dir_out),
DATE = Sys.time())
cn <- !file.exists(log_file)
suppressWarnings(write.table(x = log_tab, file = log_file, append = TRUE, row.names = FALSE, sep = ";", col.names = cn))
}
View(layout_procedimento)
res <- sprintf("Dados de informações dos procedimentos salvos na pasta %s", dir_out)
return(res)
download_dsinfo(level = "procedimento", dir_out = dir_out, log_file = log_file)
setwd('C:\\desenvolvimento\\projetos\\Dbc_reader')
library(RCurl)
library(rvest)
library(dplyr)
library(stringr)
library(read.dbc)
library(readxl)
source("R/utils.R")
ano <- "2024"
dir_out <- "outputs"
log_file <- sprintf("documentos/log_%s.txt", ano)
unlink(log_file)
ano_mes_atual <- format(Sys.Date(), "%Y%m")
url_ftp <- "ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/"
verificar_ano_mes <- function(file_name) {
grepl(ano_mes_atual, file_name)
}
grepl(ano_mes_atual, file_name)
listar_arquivos_ftp <- function(url) {
con <- url(url, "r")
files <- getURL(con, dirlistonly = TRUE)
close(con)
files <- strsplit(files, "\r\n")[[1]]
files
}
arquivos_ftp <- listar_arquivos_ftp(url_ftp)
find_tup()
arquivo_ftp <- buscar_arquivo_zip_ano_mes_atual("ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/")
source("R/utils.R")
arquivo_ftp <- buscar_arquivo_zip_ano_mes_atual("ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/")
ano_mes_atual <- format(Sys.Date(), "%Y%m")
listar_arquivos_ftp <- function(url) {
con <- url(url, "r")
files <- getURL(con, dirlistonly = TRUE)
close(con)
files <- strsplit(files, "\r\n")[[1]]
files
}
arquivos_ftp <- listar_arquivos_ftp(url_ftp)
arquivos_ftp <- listar_arquivos_ftp(url_ftp)
arquivo_ftp <- buscar_arquivo_zip_ano_mes_atual("ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/")
library(RCurl)
listar_arquivos_ftp <- function(url) {
con <- url(url, "r")
files <- getURL(con, dirlistonly = TRUE)
close(con)
files <- strsplit(files, "\r\n")[[1]]
files
}
url_ftp <- "ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
View(listar_arquivos_ftp)
library(RCurl)
library(rvest)
library(dplyr)
library(stringr)
library(read.dbc)
library(readxl)
source("R/utils.R")
ano <- "2024"
dir_out <- "outputs"
log_file <- sprintf("documentos/log_%s.txt", ano)
unlink(log_file)
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
source("R/utils.R")
ano <- "2024"
dir_out <- "outputs"
log_file <- sprintf("documentos/log_%s.txt", ano)
unlink(log_file)
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
download_dsinfo(level = "procedimento", dir_out = dir_out, log_file = log_file)
setwd('C:\\desenvolvimento\\projetos\\Dbc_reader')
library(RCurl)
library(rvest)
library(dplyr)
library(stringr)
library(read.dbc)
library(readxl)
source("R/utils.R")
ano <- "2024"
con <- url(url, "r")
con <- url(url_ftp)
files <- getURL(con, dirlistonly = TRUE)
source("R/utils.R")
setwd('C:\\desenvolvimento\\projetos\\Dbc_reader')
library(RCurl)
library(rvest)
library(dplyr)
library(stringr)
library(read.dbc)
library(readxl)
ano <- "2024"
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
con <- url(url, port = 21L)
url_ftp <- "ftp://ftp2.datasus.gov.br:21//public/sistemas/tup/downloads/"
con <- url(url)
con <- curl(url, ftp.use.epsv = FALSE)
library(RCurl)
library(rvest)
library(dplyr)
library(stringr)
library(read.dbc)
library(readxl)
source("R/utils.R")
ano <- "2024"
con <- curl(url, ftp.use.epsv = FALSE)
url_ftp <- "ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/"
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
con <- url(url, "r")
files <- getURL(con, ftp.use.epsv = FALSE)
con <- url(url, "r")
con <- url(url_ftp, "r")
files <- getURL(con, ftp.use.epsv = FALSE)
url_ftp <- "ftp://ftp2.datasus.gov.br//public/sistemas/tup/downloads/"
files <- getURL(url_ftp, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
files
source("R/utils.R")
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
data_atual <- format(Sys.Date(), "%Y%m")
data_atual <- format(Sys.Date(), "%Y%m")
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
url_completa <- paste0(url_ftp, "TabelaUnificada_", data_atual)
print(url_completa)
data_atual <- format(Sys.Date(), "%Y%m")
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
url_completa <- paste0(url_ftp, "TabelaUnificada_", data_atual, ".zip")
# Nome do arquivo local onde será salvo
nome_arquivo_local <- paste0("TabelaUnificada_", data_atual, ".zip")
# Fazer o download do arquivo
download.file(url_completa, nome_arquivo_local)
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
data_atual <- format(Sys.Date(), "%Y%m")
url_completa <- paste0(url_ftp, "TabelaUnificada_", data_atual, ".zip")
nome_arquivo_local <- paste0("TabelaUnificada_", data_atual, ".zip")
listar_arquivos_ftp <- function(url, data_atual) {
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
files <- files[grep(paste0("^", "TabelaUnificada_", data_atual), files)]  # Filtrando apenas os arquivos que começam com a URL completa concatenada com a data atual
files
}
files
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
listar_arquivos_ftp <- function(url, data_atual) {
# Obtém o conteúdo do diretório FTP
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
# Filtra os arquivos com base na URL completa concatenada com a data atual
files <- files[grep(paste0("^", "TabelaUnificada_", data_atual), files)]
# Extrai informações sobre os arquivos (nome, tipo, tamanho)
arquivos <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = as.numeric(sub(".*\\s+(\\d+)\\s*$", "\\1", files))
)
arquivos
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
data_atual <- format(Sys.Date(), "%Y%m")
arquivos <- listar_arquivos_ftp(url_ftp, data_atual)
print(arquivos)
listar_arquivos_ftp <- function(url) {
# Obtém o conteúdo do diretório FTP
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
# Extrai informações sobre os arquivos (nome, tipo, tamanho)
arquivos <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = as.numeric(sub(".*\\s+(\\d+)\\s*$", "\\1", files))
)
arquivos
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
files
listar_arquivos_ftp <- function(url) {
# Obtém o conteúdo do diretório FTP
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
# Extrai informações sobre os arquivos (nome, tipo, tamanho, data)
arquivos <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = as.numeric(sub(".*\\s+(\\d+)\\s*$", "\\1", files)),
data = as.Date(sub("^.*\\s+(\\S+\\s+\\S+)\\s+\\d+\\s+\\S+$", "\\1", files), format = "%b %d %H:%M")
)
arquivos
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
listar_arquivos_ftp <- function(url) {
# Obtém o conteúdo do diretório FTP
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
# Extrai informações sobre os arquivos (nome, tipo, tamanho, data)
arquivos <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = as.numeric(sub(".*\\s(\\d+)\\s.*", "\\1", files, perl = TRUE)),
data = as.Date(sub(".*\\s+(\\S+\\s+\\S+\\s+\\d+)\\s.*", "\\1", files), format = "%b %d %Y")
)
arquivos
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
listar_arquivos_ftp <- function(url) {
# Obtém o conteúdo do diretório FTP
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
# Extrai informações sobre os arquivos (nome, tipo, tamanho, data)
arquivos <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = as.numeric(sub("^.*\\s+(\\d+)\\s.*$", "\\1", files)),
data = as.Date(sub("^.*\\s+\\S+\\s+\\S+\\s+\\S+\\s+(\\S+\\s+\\S+\\s+\\S+)\\s.*$", "\\1", files), format = "%b %d %Y")
)
arquivos
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
listar_arquivos_ftp <- function(url) {
# Obtém o conteúdo do diretório FTP
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
# Extrai informações sobre os arquivos (nome, tipo, tamanho, data)
arquivos <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = as.numeric(sub(".*\\s+(\\d+)\\s.*", "\\1", files)),
data = as.Date(sub(".*\\s+\\d+\\s+\\S+\\s+\\S+\\s+(\\S+\\s+\\S+\\s+\\S+)\\s.*", "\\1", files), format = "%b %d %Y")
)
arquivos
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
listar_arquivos_ftp <- function(url) {
# Obtém o conteúdo do diretório FTP
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
# Extrai informações sobre os arquivos (nome, tipo, tamanho, data)
arquivos <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = as.numeric(sub("^.*\\s+(\\d+)\\s.*", "\\1", files)) / (1024 * 1024), # Converte para MB
data = as.Date(sub("^.*\\s+(\\S+\\s+\\S+\\s+\\S+)\\s.*", "\\1", files), format = "%d-%b-%Y")
)
arquivos
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
arquivos <- listar_arquivos_ftp(url_ftp)
print(arquivos)
baixar_arquivos_ftp <- function(url_ftp, pasta_destino) {
arquivos <- listar_arquivos_ftp(url_ftp)
for (arquivo in arquivos$nome) {
url_arquivo <- paste0(url_ftp, arquivo)
destino <- file.path(pasta_destino, arquivo)
download.file(url_arquivo, destino)
}
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
pasta_destino <- "~/downloads_tabela_unificada"  # Pasta onde os arquivos serão salvos
dir.create(pasta_destino, showWarnings = FALSE)
baixar_arquivos_ftp(url_ftp, pasta_destino)
listar_arquivos_ftp <- function(url) {
files <- getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
files <- strsplit(files, "\r\n")[[1]]
files <- data.frame(
nome = files,
tipo = sub("^.*\\.", "", files),
tamanho = NA
)
files
}
baixar_arquivos_ftp <- function(url_ftp, pasta_destino) {
arquivos <- listar_arquivos_ftp(url_ftp)
for (i in seq_len(nrow(arquivos))) {
arquivo <- arquivos[i, "nome"]
url_arquivo <- paste0(url_ftp, URLencode(arquivo))
destino <- file.path(pasta_destino, arquivo)
download.file(url_arquivo, destino, mode = "wb") # Especificando modo binário para arquivos binários
}
}
url_ftp <- "ftp://ftp2.datasus.gov.br/public/sistemas/tup/downloads/"
pasta_destino <- "~/downloads_tabela_unificada"  # Pasta onde os arquivos serão salvos
if (!file.exists(pasta_destino)) {
dir.create(pasta_destino, recursive = TRUE)
}
baixar_arquivos_ftp(url_ftp, pasta_destino)
